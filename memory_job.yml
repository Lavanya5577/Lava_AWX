---
- name: Add Target Windows Host with Dynamic Variables
  hosts: localhost
  gather_facts: false

  vars:
    service_now_instance: "{{ service_now_instance }}"
    service_now_username: "{{ service_now_username }}"
    service_now_password: "{{ service_now_password }}"
    server_name: "{{ server_name }}"
    incident_number: "{{ incident_number }}"

  tasks:
    - name: Add host to inventory with fixed credentials
      add_host:
        name: "{{ server_name }}"
        ansible_host: "10.112.0.10"
        ansible_user: "windows_user"
        ansible_password: "THpW68qJw3Br!DX"
        ansible_port: 5985
        ansible_connection: winrm
        ansible_winrm_transport: ntlm
        ansible_winrm_scheme: http
        ansible_winrm_server_cert_validation: ignore
        ansible_shell_type: powershell
        ansible_python_interpreter: /usr/bin/python
        groups: fixed_windows

- name: Kill High Memory Process and Update SNOW
  hosts: fixed_windows
  gather_facts: true  # Enable gathering facts to get memory information

  vars:
    service_now_instance: "{{ service_now_instance }}"
    service_now_username: "{{ service_now_username }}"
    service_now_password: "{{ service_now_password }}"
    server_name: "{{ server_name }}"
    incident_number: "{{ incident_number }}"
    memory_threshold: 80

  tasks:
    - name: Check WinRM Connectivity
      win_ping:

    - name: Get processes and their memory usage
      win_shell: |
        $isServer = ([System.Environment]::OSVersion.VersionString -like '*Server*')
        Get-Process | Select-Object Id, ProcessName, @{Name='MemoryPercent';Expression={
          if ($isServer) {
            ([System.Diagnostics.PerformanceCounter]::new('Process', '% Processor Time', $_.ProcessName).NextValue() / [Environment]::ProcessorCount)
          } else {
            (($_.WorkingSet64 / [System.Environment]::WorkingSet) * 100)
          }
        }} | Sort-Object MemoryPercent -Descending
      register: process_memory_info

    - name: Debug memory-consuming processes
      debug:
        msg: "{{ process_memory_info.stdout_lines }}"

    - name: Identify processes exceeding memory threshold
      set_fact:
        high_memory_processes: "{{ process_memory_info.stdout_lines | map('regex_search', '(\\d+)\\s+(\\S+)\\s+([\\d\\.]+)') | select | map('regex_findall', '(\\d+)\\s+(\\S+)\\s+([\\d\\.]+)') | map('first') | selectattr(2, 'float') | selectattr(2, 'ge', memory_threshold) }}"

    - name: Debug high memory processes
      debug:
        msg: "Processes exceeding {{ memory_threshold }}% memory: {{ high_memory_processes }}"
      when: high_memory_processes | length > 0

    - name: Kill processes exceeding memory threshold
      win_shell: "taskkill /F /PID {{ item.0 }}"
      with_items: "{{ high_memory_processes }}"
      register: kill_results
      ignore_errors: yes
      when: high_memory_processes | length > 0

    - name: Debug kill results
      debug:
        msg: "Kill results: {{ kill_results }}"
      when: high_memory_processes | length > 0

    - name: Set flag if any process was killed successfully
      set_fact:
        process_killed: "{{ kill_results.results | selectattr('rc', 'eq', 0) | list | length > 0 }}"
      when: high_memory_processes | length > 0

    - name: Get Incident Sys_ID
      uri:
        url: "https://{{ service_now_instance }}/api/now/table/incident?sysparm_query=number={{ incident_number }}"
        method: GET
        force_basic_auth: yes
        headers:
          Authorization: "Basic {{ (service_now_username + ':' + service_now_password) | b64encode }}"
          Content-Type: "application/json"
      register: incident_info
      delegate_to: localhost

    - name: Set Incident Sys_ID Fact
      set_fact:
        incident_sys_id: "{{ incident_info.json.result[0].sys_id }}"
      when: incident_info.json.result | length > 0

    - name: Update SNOW ticket - PID Kill Success
      uri:
        url: "https://{{ service_now_instance }}/api/now/table/incident/{{ incident_sys_id }}"
        method: PATCH
        force_basic_auth: yes
        headers:
          Authorization: "Basic {{ (service_now_username + ':' + service_now_password) | b64encode }}"
          Content-Type: "application/json"
        body_format: json
        body:
          {
            "state": "7",
            "close_code": "Solution Provided",
            "close_notes": "One or more processes exceeding {{ memory_threshold }}% memory were killed by automation."
          }
        status_code: [200, 201, 403, 405]
      when: process_killed | default(false) | bool and incident_sys_id is defined
      delegate_to: localhost

    - name: Update SNOW ticket - No High Memory Process Found
      uri:
        url: "https://{{ service_now_instance }}/api/now/table/incident/{{ incident_sys_id }}"
        method: PATCH
        force_basic_auth: yes
        headers:
          Authorization: "Basic {{ (service_now_username + ':' + service_now_password) | b64encode }}"
          Content-Type: "application/json"
        body_format: json
        body:
          {
            "state": "7",
            "close_code": "Solution Provided",
            "work_notes": "No process found consuming more than {{ memory_threshold }}% memory. No action taken by automation. Closing the ticket."
          }
        status_code: [200, 201, 403, 405]
      when: high_memory_processes | length == 0 and incident_sys_id is defined
      delegate_to: localhost
