- name: Handle Datadog Alerts and Manage ServiceNow Cases
  hosts: localhost
  gather_facts: yes

  vars:
    sys_id1: "{{awx_webhook_payload.sys_id}}"
 
    service_now:
      instance: "{{ service_now_instance }}"
      username: "{{ service_now_username }}"
      password: "{{ service_now_password }}"
      case_table: "u_case1"
      incident_table: "incident"

    datadog:
      api_key: "{{ datadog_api_key }}"
      app_key: "{{ datadog_app_key }}"
      api_url: "{{ datadog_api_url }}"

    recovery_window: 30  # 30 seconds (change as needed)

  tasks:
    - name: details
      ansible.builtin.debug:
        var: sys_id1
    - name: Wait for recovery window (30 seconds)
      ansible.builtin.pause:
        seconds: "{{ recovery_window }}"

    - name: Fetch case details from ServiceNow using sys_id
      ansible.builtin.uri:
        url: "https://{{ service_now.instance }}/api/now/table/{{ service_now.case_table }}/{{ sys_id1 }}"
        method: GET
        user: "{{ service_now.username }}"
        password: "{{ service_now.password }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        return_content: yes
      register: case_details

    - name: Debug case details
      ansible.builtin.debug:
        var: case_details

    - name: Extract alert ID from case details
      ansible.builtin.set_fact:
        alert_id: "{{ case_details.json.result.u_id }}"

    - name: Debug extracted alert ID
      ansible.builtin.debug:
        var: alert_id

    - name: Fetch alert details from Datadog
      ansible.builtin.uri:
        url: "{{ datadog.api_url }}/{{ alert_id }}"
        method: GET
        headers:
          DD-API-KEY: "{{ datadog.api_key }}"
          DD-APPLICATION-KEY: "{{ datadog.app_key }}"
        return_content: yes 
      register: alert_details

    - name: Debug alert details
      ansible.builtin.debug:
        var: alert_details

    - name: Check if alert is resolved
      ansible.builtin.uri:
        url: "https://{{ service_now.instance }}/api/now/table/{{ service_now.case_table }}/{{ sys_id1 }}"
        method: PATCH
        user: "{{ service_now.username }}"
        password: "{{ service_now.password }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          u_state: "resolved"
          u_description: "The alert is auto-resolved"
        status_code: [200, 201]
      when: alert_details.json.overall_state != "Alert"
      register: resolve_response

    # - name: End play if alert is resolved or response is empty
    #   meta: end_play
    #   when: 
    #     - not resolve_response.json.result | default({}, true) or 
    #       not resolve_response.json.result.u_state | default("", true) or 
    #       resolve_response.json.result.u_state == "resolved"

    - name: End play if alert is resolved
      meta: end_play
      when: 
        - resolve_response.json.result is defined
        - resolve_response.json.result.u_state is defined
        - resolve_response.json.result.u_state == "resolved"

    - name: Create incident if alert is still active
      ansible.builtin.uri:
        url: "https://{{ service_now.instance }}/api/now/table/{{ service_now.incident_table }}"
        method: POST
        user: "{{ service_now.username }}"
        password: "{{ service_now.password }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          short_description: "case with sys_id:{{ sys_id1 }} is unresolved due to alert with id : {{ case_details.json.result.u_id }} in datadog is still active"
          description: "case with sys_id:{{ sys_id1 }} is unresolved due to alert with id : {{ case_details.json.result.u_id }} in datadog is still active"
          impact: "2"
          urgency: "2"
        status_code: [200, 201]
      when: alert_details.json.overall_state == "Alert"
      register: incident_response

    - name: Extract incident ID
      ansible.builtin.set_fact:
        incident_id: "{{ incident_response.json.result.number}}"
    

    - name: Update case with Incident ID
      ansible.builtin.uri:
        url: "https://{{ service_now.instance }}/api/now/table/{{ service_now.case_table }}/{{ sys_id1 }}"
        method: PATCH
        user: "{{ service_now.username }}"
        password: "{{ service_now.password }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          u_incident_id: "{{ incident_id }}"
        status_code: [200, 201]
      when: alert_details.json.overall_state == "Alert"
