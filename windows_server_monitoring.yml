---
- name: Automate Windows Server Monitoring via AWX
  hosts: windows
  gather_facts: no
  tasks:
    - name: Verify WinRM connectivity
      wait_for:
        host: "{{ ansible_host }}"
        port: 5985
        timeout: 60
      delegate_to: localhost

    - name: Fetch Log Files
      win_shell: Get-Content C:\logs\app.log -Tail 10
      register: fetched_logs

    - name: Display Log Files in AWX Output
      debug:
        msg: "{{ fetched_logs.stdout_lines }}"

    - name: Scrape Logs Based on Time Range
      win_shell: |
        $logs = Get-EventLog -LogName Application -After "{{ start_time }}" -Before "{{ end_time }}" | Select-Object -First 10
        if ($logs) { $logs } else { "No logs found in the given range." }
      register: scraped_logs

    - name: Display Scraped Logs in AWX Output
      debug:
        msg: "{{ scraped_logs.stdout_lines }}"

    - name: Check High CPU Usage
      win_shell: Get-Process | Sort-Object -Descending CPU | Select-Object -First 10 Name,CPU,Id
      register: cpu_usage

    - name: Check High Memory Usage
      win_shell: Get-Process | Sort-Object -Descending WS | Select-Object -First 10 Name,WS,Id
      register: mem_usage

    - name: Display CPU & Memory Usage in AWX Output
      debug:
        msg: |
          Top 10 CPU-consuming processes:
          {{ cpu_usage.stdout_lines }}

          Top 10 Memory-consuming processes:
          {{ mem_usage.stdout_lines }}

    - name: Check Disk Utilization
      win_shell: Get-PSDrive C | Select-Object Used,Free,UsedPercent
      register: disk_utilization

    - name: Display Disk Utilization in AWX Output
      debug:
        msg: "{{ disk_utilization.stdout_lines }}"

    - name: Kill Process Automatically (Optional)
      win_shell: |
        if (Get-Process -Id {{ process_id }} -ErrorAction SilentlyContinue) {
          Stop-Process -Id {{ process_id }} -Force
          "✅ Process {{ process_id }} terminated successfully."
        } else {
          "❌ Process {{ process_id }} not found."
        }
      when: process_id | length > 0
      register: kill_process_result

    - name: Display Process Termination Result
      debug:
        msg: "{{ kill_process_result.stdout_lines }}"
      when: process_id | length > 0
