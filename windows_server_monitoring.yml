---
- name: Automate Windows Server Monitoring via AWX (RDP-based)
  hosts: all
  gather_facts: no
  tasks:
    - name: Simulate RDP Connection
      debug:
        msg: 
          - "🔍 Connecting to {{ ansible_host }} via RDP..."
          - "✅ RDP session established for {{ ansible_user }}."

    - name: Fetch Log Files
      win_shell: Get-Content C:\logs\app.log -Tail 10
      register: fetched_logs

    - name: Display Log Files in AWX Output
      debug:
        msg: "{{ fetched_logs.stdout_lines }}"

    - name: Scrape Logs Based on Time Range
      win_shell: Get-EventLog -LogName Application -After "{{ start_time }}" -Before "{{ end_time }}" | Select-Object -First 10
      register: scraped_logs

    - name: Display Scraped Logs in AWX Output
      debug:
        msg: "{{ scraped_logs.stdout_lines }}"

    - name: Check High CPU Usage
      win_shell: Get-Process | Sort-Object -Descending CPU | Select-Object -First 10 Name,CPU,Id
      register: cpu_usage

    - name: Check High Memory Usage
      win_shell: Get-Process | Sort-Object -Descending WS | Select-Object -First 10 Name,WS,Id
      register: mem_usage

    - name: Display CPU & Memory Usage in AWX Output
      debug:
        msg: |
          🔥 **Top 10 CPU-consuming processes:**
          {{ cpu_usage.stdout_lines }}

          💾 **Top 10 Memory-consuming processes:**
          {{ mem_usage.stdout_lines }}

    - name: Check Disk Utilization
      win_shell: Get-PSDrive C | Select-Object Used,Free,UsedPercent
      register: disk_utilization

    - name: Display Disk Utilization in AWX Output
      debug:
        msg: "{{ disk_utilization.stdout_lines }}"

    - name: Kill Process Automatically (Optional)
      win_shell: Stop-Process -Id {{ process_id }} -Force
      when: process_id | length > 0
      register: kill_result
      ignore_errors: yes

    - name: Display Process Termination Result
      debug:
        msg: 
          - "❌ Terminating process {{ process_id }} on {{ ansible_host }}..."
          - "{% if kill_result.rc == 0 %} ✅ Process {{ process_id }} terminated successfully. {% else %} ❌ Failed to terminate process {{ process_id }}: {{ kill_result.stderr }} {% endif %}"
      when: process_id | length > 0

  vars_files:
    - input_vars.yml
