---
- name: Automate Windows Server Monitoring via AWX
  hosts: all
  gather_facts: no
  tasks:
    - name: Establish RDP Connection (Manual Step)
      debug:
        msg: "Please manually connect to the server via RDP using mstsc /v:{{ ansible_host }}"

    - name: Fetch Log Files
      win_shell: Get-Content C:\logs\app.log -Tail 10
      register: fetched_logs
    
    - name: Save Log Files Locally
      copy:
        content: "{{ fetched_logs.stdout }}"
        dest: "./fetched_logs.txt"
      delegate_to: localhost

    - name: Scrape Logs Based on Time Range
      win_shell: Get-EventLog -LogName Application -After "{{ start_time }}" -Before "{{ end_time }}" | Select-Object -First 10
      register: scraped_logs
    
    - name: Save Scraped Logs Locally
      copy:
        content: "{{ scraped_logs.stdout }}"
        dest: "./scraped_logs.txt"
      delegate_to: localhost

    - name: Check High CPU Usage
      win_shell: Get-Process | Sort-Object -Descending CPU | Select-Object -First 10 Name,CPU,Id
      register: cpu_usage
    
    - name: Check High Memory Usage
      win_shell: Get-Process | Sort-Object -Descending WS | Select-Object -First 10 Name,WS,Id
      register: mem_usage
    
    - name: Save CPU & Memory Usage Data Locally
      copy:
        content: |
          Top 10 CPU-consuming processes:
          {{ cpu_usage.stdout }}
          
          Top 10 Memory-consuming processes:
          {{ mem_usage.stdout }}
        dest: "./process_usage.txt"
      delegate_to: localhost
    
    - name: Check Disk Utilization
      win_shell: Get-PSDrive C | Select-Object Used,Free,UsedPercent
      register: disk_utilization
    
    - name: Save Disk Utilization Data Locally
      copy:
        content: "{{ disk_utilization.stdout }}"
        dest: "./disk_utilization.txt"
      delegate_to: localhost
    
    - name: Ask User for Process Termination
      pause:
        prompt: "Do you want to kill a process? (yes/no)"
      register: user_response
      when: awx_interactive is defined and awx_interactive
    
    - name: Get PID from User
      pause:
        prompt: "Enter the PID of the process to terminate"
      register: process_id
      when: user_response.user_input | lower == 'yes'
    
    - name: Kill Process
      win_shell: Stop-Process -Id {{ process_id.user_input }} -Force
      when: user_response.user_input | lower == 'yes'
